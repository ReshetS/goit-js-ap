import axios from 'axios';
import elements from './refs'; // витягуємо елементи кнопки та спану в змінну
import { axiosURL, LS_KEY } from './variables';

axios.defaults.baseURL = axiosURL; //задаємо базову адресу нашого бекенду для аксіос

/*
Завдання на 22-23.07.2024:
Юля створить масив з текстами, що будуть відображатися у кнопці замість тексту "Нарахування бабла..."
При натисканні на кнопці витягуємо рандомний елемент з масиву і підставляємо після спінеру.

Додаємо функціонал "мегабабла":
- в html-розмітці поки що зробимо просто галочку "мега" десь поруч з самою кнопкою
- при натисканні на кнопку, перевіряємо, чи поставлена там галочка, якщо поставлена, то:
  - якщо бабла 0, то плюсуємо 1 (бо 0 множити на 2 немає сенсу)
  - якщо бабла більше, ніж 0, то помножуємо на 2
*/

answers = [
  'Бала багато не буває',
  'Треба чекати',
  'Не квапся, почекай',
  'Всі люблять бабло',
  'Тапай ще',
  'Та зачекайте, нараховується',
  'На що витратиш?',
  'Копиш на мрію?',
  'Ще бабла?',
  'Зараз буде',
  'Секундочку, додасться',
  'Давай ще',
  'Не забудь задонатити на ЗСУ',
  'Поділись із ЗСУ',
  'Тапай, поквапся',
  'Не зволікай, тисни ще',
];

function addBablo(user) {
  // створюємо функцію для обробки кліку по кнопці, приймаємо об'єкт юзера і посилання на спан у змінну element
  elements.button.disabled = true; //блокуємо кнопку
  elements.button.innerHTML =
    '<span class="loader"></span>&nbsp;&nbsp;&nbsp;Нарахування бабла...'; //змінюємо текст кнопки і додаємо спіннер
  setTimeout(() => {
    // Імітуємо затримку відповіді бекенду
    user.bablo += 1; // збільшуємо значення бабла у об'єкта юзера на 1
    axios
      .put(`user/${user.userID}`, user) // змінюємо значення бабла у юзера на бекенді (нажаль, mockapi не приймає метод PATCH, тому використовуємо PUT і скидаємо весь об'єкт)
      .then(function () {
        elements.countSpan.innerHTML = user.bablo.toString(); // якщо успішно змінилось значення бабла на бекенді, то змінюємо значення і у спанчику на фронтенді
      })
      .catch(function (error) {
        console.log(error);
      })
      .finally(() => {
        elements.button.innerHTML = 'Бабло!'; //Повертаємо значення кнопки
        elements.button.disabled = false; //Розблокуємо кнопку
      });
  }, Math.random() * 3000); // Рандомна затримка до 3 секунд
}
function startFromScratch(user) {
  axios
    .post('user', { bablo: 0 }) // створюємо нового юзера на бекенді
    .then(function (response) {
      user.userID = Number(response.data.userID); // в об'єкт юзера заносимо його новостворений ІД у числовому форматі
      user.bablo = 0; // обнуляємо кількість бабла у об'єкті юзера
      elements.countSpan.innerHTML = '0'; //обнуляємо кількість бабла на сторінці
      localStorage.setItem(LS_KEY, JSON.stringify(user.userID)); // зберігаємо ІД юзера у ЛС
    })
    .catch(function (error) {
      console.log(error);
    });
}

export { addBablo, startFromScratch };
