{"version":3,"file":"commonHelpers.js","sources":["../src/js/refs.js","../src/js/variables.js","../src/js/functions.js","../src/main.js"],"sourcesContent":["export default {\n  button: document.querySelector('.button'), // витягуємо елемент кнопки\n  countSpan: document.querySelector('#count'), // витягуємо елемент спану\n  megaSwitcher: document.querySelector('.megaSwitcher'), // витягуємо елемент чекбоксу\n};\n","const axiosURL = 'https://668581e2b3f57b06dd4cf9fd.mockapi.io/api/v1'; //задаємо базову адресу нашого бекенду для аксіос\nconst LS_KEY = 'UserID'; //задаємо ключ для локал сторедж\n\nexport { axiosURL, LS_KEY };\n","import axios from 'axios';\nimport elements from './refs'; // витягуємо елементи кнопки та спану в змінну\nimport { axiosURL, LS_KEY } from './variables';\n\naxios.defaults.baseURL = axiosURL; //задаємо базову адресу нашого бекенду для аксіос\n\n// Масив текстів для кнопки Бабло, коли вона натиснута\nconst answers = [\n  'Нарахування бабла...',\n  'Бабла багато не буває',\n  'Треба чекати',\n  'Нарахування бабла...',\n  'Не квапся, почекай',\n  'Всі люблять бабло',\n  'Тапай ще',\n  'Та зачекайте, нараховується',\n  'На що витратиш?',\n  'Нарахування бабла...',\n  'Копиш на мрію?',\n  'Ще бабла?',\n  'Зараз буде',\n  'Секундочку, додасться',\n  'Нарахування бабла...',\n  'Давай ще',\n  'Не забудь задонатити на ЗСУ',\n  'Нарахування бабла...',\n  'Поділись із ЗСУ',\n  'Тапай, поквапся',\n  'Не зволікай, тисни ще',\n  'Нарахування бабла...',\n];\n\nfunction addBablo(user) {\n  // створюємо функцію для обробки кліку по кнопці, приймаємо об'єкт юзера і посилання на спан у змінну element\n  elements.button.disabled = true; //блокуємо кнопку\n  const randomIndex = Math.ceil(Math.random() * answers.length); // рандомно вибираємо індекс елемента масиву\n  elements.button.innerHTML = `<span class=\"loader\"></span>&nbsp;&nbsp;&nbsp;${answers[randomIndex]}`; //змінюємо текст кнопки і додаємо спіннер\n  setTimeout(() => {\n    // Імітуємо затримку відповіді бекенду\n    if (elements.megaSwitcher.checked && user.bablo !== 0) {\n      //перевіряємо якщо поставлений чекбокс на мегабабло і кількість бабла у юзера не дорівнює 0\n      user.bablo *= 2; // збільшуємо кількість бабла в 2 рази\n    } else {\n      user.bablo += 1; // збільшуємо значення бабла у об'єкта юзера на 1\n    }\n\n    axios\n      .put(`user/${user.userID}`, user) // змінюємо значення бабла у юзера на бекенді (нажаль, mockapi не приймає метод PATCH, тому використовуємо PUT і скидаємо весь об'єкт)\n      .then(function () {\n        elements.countSpan.innerHTML = user.bablo.toString(); // якщо успішно змінилось значення бабла на бекенді, то змінюємо значення і у спанчику на фронтенді\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .finally(() => {\n        elements.button.innerHTML = 'Бабло!'; //Повертаємо значення кнопки\n        elements.button.disabled = false; //Розблокуємо кнопку\n      });\n  }, Math.random() * 3000); // Рандомна затримка до 3 секунд\n}\nfunction startFromScratch(user) {\n  axios\n    .post('user', { bablo: 0 }) // створюємо нового юзера на бекенді\n    .then(function (response) {\n      user.userID = Number(response.data.userID); // в об'єкт юзера заносимо його новостворений ІД у числовому форматі\n      user.bablo = 0; // обнуляємо кількість бабла у об'єкті юзера\n      elements.countSpan.innerHTML = '0'; //обнуляємо кількість бабла на сторінці\n      localStorage.setItem(LS_KEY, JSON.stringify(user.userID)); // зберігаємо ІД юзера у ЛС\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport { addBablo, startFromScratch };\n","import axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { addBablo, startFromScratch } from './js/functions'; // імпортуємо функцію прослуховувача\nimport elements from './js/refs'; // витягуємо елементи кнопки та спану в змінну\nimport { axiosURL, LS_KEY } from './js/variables';\n\naxios.defaults.baseURL = axiosURL; //задаємо базову адресу нашого бекенду для аксіос\n\nconst user = { bablo: 0 }; // створюємо об'єкт юзера з дефолтними даними\nconst savedData = localStorage.getItem(LS_KEY); // дістаємо значення із стореджу\n\nif (savedData === null) {\n  //якщо сторедж пустий, то ...\n  axios\n    .post('user', user) // створюємо нового юзера на бекенді\n    .then(function (response) {\n      user.userID = Number(response.data.userID); // в об'єкт юзера заносимо його новостворений ІД у числовому форматі\n      localStorage.setItem(LS_KEY, JSON.stringify(user.userID)); // зберігаємо ІД юзера у ЛС\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n} else {\n  // якщо сторедж не пустий, то ...\n  user.userID = Number(savedData); //в об'єкт юзера заносимо його ІД з ЛС\n  axios\n    .get(`user/${user.userID}`) // здійснюємо запит на бекенд по ІД юзера\n    .then(function (response) {\n      user.bablo = response.data.bablo; // в об'єкт юзера записуємо кількість його бабла\n      elements.countSpan.innerHTML = user.bablo.toString(); // змінюємо контент спану на кількість бабла в об'єкті юзера\n    })\n    .catch(function (error) {\n      // Оброблюємо помилку\n      if (error.response && error.response.status === 404) {\n        //робимо перевірку на наявність 404 помилки(коли юзера не існує на бекенді)\n        startFromScratch(user); //викликаємо функцію для створення нового юзера\n      } else {\n        // виводимо помилку\n        iziToast.error({\n          title: 'Помилка',\n          message: `Виникла помилка при запиті Ваших даних з серверу. Спробуйте пізніше`,\n          position: 'topRight',\n        });\n      }\n    });\n}\n\nelements.button.addEventListener('click', () => {\n  // додаємо прослуховувач по кліку\n  addBablo(user); // викликаємо функцію для обробки кліку\n});\n"],"names":["elements","axiosURL","LS_KEY","axios","answers","addBablo","user","randomIndex","error","startFromScratch","response","savedData","iziToast"],"mappings":"6vBAAA,MAAeA,EAAA,CACb,OAAQ,SAAS,cAAc,SAAS,EACxC,UAAW,SAAS,cAAc,QAAQ,EAC1C,aAAc,SAAS,cAAc,eAAe,CACtD,ECJMC,EAAW,qDACXC,EAAS,SCGfC,EAAM,SAAS,QAAUF,EAGzB,MAAMG,EAAU,CACd,uBACA,wBACA,eACA,uBACA,qBACA,oBACA,WACA,8BACA,kBACA,uBACA,iBACA,YACA,aACA,wBACA,uBACA,WACA,8BACA,uBACA,kBACA,kBACA,wBACA,sBACF,EAEA,SAASC,EAASC,EAAM,CAEtBN,EAAS,OAAO,SAAW,GAC3B,MAAMO,EAAc,KAAK,KAAK,KAAK,SAAWH,EAAQ,MAAM,EAC5DJ,EAAS,OAAO,UAAY,iDAAiDI,EAAQG,CAAW,CAAC,GACjG,WAAW,IAAM,CAEXP,EAAS,aAAa,SAAWM,EAAK,QAAU,EAElDA,EAAK,OAAS,EAEdA,EAAK,OAAS,EAGhBH,EACG,IAAI,QAAQG,EAAK,MAAM,GAAIA,CAAI,EAC/B,KAAK,UAAY,CAChBN,EAAS,UAAU,UAAYM,EAAK,MAAM,SAAQ,CAC1D,CAAO,EACA,MAAM,SAAUE,EAAO,CACtB,QAAQ,IAAIA,CAAK,CACzB,CAAO,EACA,QAAQ,IAAM,CACbR,EAAS,OAAO,UAAY,SAC5BA,EAAS,OAAO,SAAW,EACnC,CAAO,CACJ,EAAE,KAAK,SAAW,GAAI,CACzB,CACA,SAASS,EAAiBH,EAAM,CAC9BH,EACG,KAAK,OAAQ,CAAE,MAAO,CAAC,CAAE,EACzB,KAAK,SAAUO,EAAU,CACxBJ,EAAK,OAAS,OAAOI,EAAS,KAAK,MAAM,EACzCJ,EAAK,MAAQ,EACbN,EAAS,UAAU,UAAY,IAC/B,aAAa,QAAQE,EAAQ,KAAK,UAAUI,EAAK,MAAM,CAAC,CAC9D,CAAK,EACA,MAAM,SAAUE,EAAO,CACtB,QAAQ,IAAIA,CAAK,CACvB,CAAK,CACL,CCjEAL,EAAM,SAAS,QAAUF,EAEzB,MAAMK,EAAO,CAAE,MAAO,GAChBK,EAAY,aAAa,QAAQT,CAAM,EAEzCS,IAAc,KAEhBR,EACG,KAAK,OAAQG,CAAI,EACjB,KAAK,SAAUI,EAAU,CACxBJ,EAAK,OAAS,OAAOI,EAAS,KAAK,MAAM,EACzC,aAAa,QAAQR,EAAQ,KAAK,UAAUI,EAAK,MAAM,CAAC,CAC9D,CAAK,EACA,MAAM,SAAUE,EAAO,CACtB,QAAQ,IAAIA,CAAK,CACvB,CAAK,GAGHF,EAAK,OAAS,OAAOK,CAAS,EAC9BR,EACG,IAAI,QAAQG,EAAK,MAAM,EAAE,EACzB,KAAK,SAAUI,EAAU,CACxBJ,EAAK,MAAQI,EAAS,KAAK,MAC3BV,EAAS,UAAU,UAAYM,EAAK,MAAM,SAAQ,CACxD,CAAK,EACA,MAAM,SAAUE,EAAO,CAElBA,EAAM,UAAYA,EAAM,SAAS,SAAW,IAE9CC,EAAiBH,CAAI,EAGrBM,EAAS,MAAM,CACb,MAAO,UACP,QAAS,sEACT,SAAU,UACpB,CAAS,CAET,CAAK,GAGLZ,EAAS,OAAO,iBAAiB,QAAS,IAAM,CAE9CK,EAASC,CAAI,CACf,CAAC"}